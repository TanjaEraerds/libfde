#ifndef __PROTOTYPE_CHARSTACKER_FTYPE
#define __PROTOTYPE_CHARSTACKER_FTYPE

# include "fde/type/itf.fpp"
# include "fde/ref_status.fpp"

  type CharStacker_t
    _private
    character(len=:),            pointer :: buffer => null()
    integer*4                            :: tos    = 0
    integer*4, dimension(:), allocatable :: idx
  end type

  interface
    subroutine charstacker_create_c( self, buffer, depth ); import
      type(CharStacker_t)       :: self
      character(len=*),  target :: buffer
      integer*4,       optional :: depth
    end subroutine
  end interface

  interface push
    subroutine charstacker_push_c( self, what ); import
      type(CharStacker_t) :: self
      character(len=*)    :: what
    end subroutine
  end interface

  interface pop
    subroutine charstacker_pop_c( self ); import
      type(CharStacker_t) :: self
    end subroutine
  end interface

  interface get
    function charstacker_get_c( self ) result(res); import
      type(CharStacker_t)       :: self
      character(len=:), pointer :: res
    end function
  end interface

#endif

